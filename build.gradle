buildscript {
    repositories {
        jcenter()
    }
}

plugins {
    id 'application'
    id 'java'
    id "org.jetbrains.kotlin.jvm" version "1.2.41"
    id 'com.github.johnrengelman.shadow' version '2.0.2'
    id "io.gitlab.arturbosch.detekt" version "1.0.0.RC7"
}

repositories {
    jcenter()
}

version = project.findProperty('projectVersion') ?: '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'
targetCompatibility = '1.8'
mainClassName = 'io.vertx.core.Launcher'

def vertxVersion = '3.5.2'
def kotlinVersion = '1.2.41'
def log4j2Version = '2.11.0'
def junitVersion = '5.2.0'
def assertJVersion = '3.10.0'
def mainVerticleName = 'io.imulab.heimdall.ServerVerticle'
def watchForChange = 'src/**/*'
def doOnChange = './gradlew classes'

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
    compile "io.vertx:vertx-core:$vertxVersion"
    compile "io.vertx:vertx-config:$vertxVersion"
    compile "io.vertx:vertx-config-yaml:$vertxVersion"
    compile "io.vertx:vertx-rx-java2:$vertxVersion"
    compile "io.vertx:vertx-mongo-client:$vertxVersion"
    compile "org.apache.logging.log4j:log4j-api:$log4j2Version"
    compile "org.apache.logging.log4j:log4j-core:$log4j2Version"
    testCompile "org.junit.jupiter:junit-jupiter-api:$junitVersion"
    testRuntime "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
    testCompile "io.vertx:vertx-unit:$vertxVersion"
    testCompile "io.vertx:vertx-junit5:$vertxVersion"
    testCompile "org.assertj:assertj-core:$assertJVersion"
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

detekt {
    version = "1.0.0.RC7"
    defaultProfile {
        input = file("src/main/kotlin")
        filters = ".*/resources/.*,.*/build/.*"
        config = file("detekt.yml")
        output = file("reports")
        outputName = "detekt-report"
        baseline = file("reports/baseline.xml")
    }
}

task unitTests(type: Test) {
    useJUnitPlatform {
        excludeTags 'integration'
        includeEngines 'junit-jupiter', 'junit-vintage'
    }
    failFast = true
}

task integrationTests(type: Test) {
    useJUnitPlatform {
        includeTags 'integration'
        includeEngines 'junit-jupiter', 'junit-vintage'
    }
    failFast = true
}

shadowJar {
    baseName = 'heimdall'
    classifier = null
    manifest {
        attributes "Main-Verticle": mainVerticleName
    }
    mergeServiceFiles {
        include 'META-INF/services/io.vertx.core.spi.VerticleFactory'
    }
}

run {
    args = ['run', mainVerticleName, "--redeploy=$watchForChange", "--launcher-class=$mainClassName", "--on-redeploy=$doOnChange"]
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.8'
}
